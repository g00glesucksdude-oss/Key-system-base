-- ✅ Load SHA-256 module from GitHub (no extension)
local url = "https://raw.githubusercontent.com/g00glesucksdude-oss/Key-system-base/refs/heads/main/sha256" 
local raw = game:HttpGet(url, true)

-- 🔍 Sanity check: make sure it's Lua, not HTML
if raw:find("<html") or raw:find("DOCTYPE") then
    error("❌ GitHub returned HTML instead of Lua. Check the file path or extension.")
end

-- 🔐 Load the module
local sha256 = loadstring(raw)()
assert(type(sha256) == "table" and sha256.hash, "❌ SHA-256 module failed to load")

-- 🧪 Test input
local username = "google"
local salt = "sandbox_salt"
local expiry_ts = os.time() + 300 -- valid for 5 minutes

-- 🔧 Build key string
local key_string = username .. ":" .. salt .. ":" .. tostring(expiry_ts)

-- 🔒 Generate hash
local hash = sha256.hash(key_string)
assert(hash and #hash == 64, "❌ Hash failed or malformed")

-- 📤 Output results
print("🔐 Key String:", key_string)
print("🔒 SHA-256 Hash:", hash)

-- ✅ Validator simulation
local function validate_key(input)
    local expected = sha256.hash(input)
    if expected == hash then
        print("✅ Key is valid")
    else
        print("❌ Invalid key")
    end
end

-- 🧪 Run tests
validate_key(key_string)         -- should pass
validate_key("wrong:input:123")  -- should fail
